 cannot display the file as “audio/octet-stream”.



public static byte[] generateAudioCaptcha(String text, UUID requestId) {
        String uniqueFileName = "speech_" + System.currentTimeMillis() + "_" + requestId;
        File tempFile = null;

        try {
            tempFile = File.createTempFile(uniqueFileName, ".wav");
            tempFile.deleteOnExit();

            Voice voice = VoiceManager.getInstance().getVoice(VOICE_NAME);
            if (voice == null) {
                logger.error("Voice '{}' not found. Returning empty byte array.", VOICE_NAME);
                return new byte[0];
            }

            voice.allocate();

            // Create AudioPlayer
            AudioPlayer audioPlayer = new SingleFileAudioPlayer(tempFile.getAbsolutePath().replace(".wav", ""),
                    javax.sound.sampled.AudioFileFormat.Type.WAVE);

            voice.setAudioPlayer(audioPlayer);
            voice.setRate(100);
            voice.setPitch(75);
            voice.speak(text);
            voice.deallocate();
            audioPlayer.close();

            logger.info("Audio file generated successfully for requestId: {}", requestId);

            return fileToByteArray(tempFile);

        } catch (Exception e) {
            logger.error("Error generating speech audio for requestId: {}", requestId, e);
            throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                    MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, requestId));

        } finally {
            // Ensure temporary file deletion
            if (tempFile != null && tempFile.exists()) {
                if (tempFile.delete()) {
                    logger.info("Temporary file deleted: {}", tempFile.getAbsolutePath());
                } else {
                    logger.warn("Failed to delete temporary file: {}", tempFile.getAbsolutePath());
                }
            }
        }
    }

    /**
     * Converts a file to a byte array
     *
     * @param file the file to convert.
     * @return byte array representing the file’s contents.
     */
    private static byte[] fileToByteArray(File file) {
        try (AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(file);
             ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {

            byte[] buffer = new byte[1024];
            // Reading bytes
            IntStream.generate(() -> {
                        try {
                            return audioInputStream.read(buffer);
                        } catch (IOException e) {
                            throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                                    MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, e.getMessage()));
                        }
                    })
                    .takeWhile(bytesRead -> bytesRead != -1)
                    .forEach(bytesRead -> byteArrayOutputStream.write(buffer, 0, bytesRead));

            return byteArrayOutputStream.toByteArray();

        } catch (IOException | UnsupportedAudioFileException e) {
            logger.error("Error reading file to byte array", e);
            throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                    MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, file.getName()));
        }
    }
