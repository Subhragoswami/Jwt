  @Modifying
    @Query("UPDATE MerchantEntityUser u SET u.entityId = :entityId WHERE u.userId = :userId")
    void updateEntityIdForUser(@Param("userId") UUID userId, @Param("entityId") String entityId);

package com.epay.merchant.entity;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import lombok.*;

import java.util.UUID;

@EqualsAndHashCode(callSuper = true)
@Getter
@Setter
@Builder
@Entity
@Table(name = "MERCHANT_ENTITY_USER")
@NoArgsConstructor
@AllArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class MerchantEntityUser extends AuditEntity{

    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    @Column(nullable = false, updatable = false, unique = true)
    private UUID id;

    private UUID userId;
    private String entityId;
    @Column(name = "MID")
    private String mId;
}


{
    "status": 0,
    "errors": [
        {
            "errorCode": "500",
            "errorMessage": "Executing an update/delete query"
        }
    ]
}
