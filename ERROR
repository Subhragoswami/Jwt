{
    "status": 0,
    "errors": [
        {
            "errorCode": "400",
            "errorMessage": "JSON parse error: Cannot construct instance of `com.epay.merchant.model.request.MerchantUserUpdateRequest` (although at least one Creator exists): cannot deserialize from Object value (no delegate- or property-based Creator)"
        }
    ]
}

{
    "remark" : "test"
}

merchant/v1/user/user_01/ACTIVE

  @PutMapping("/{userName}/{userStatus}")
    @Operation(summary = "Update User Status", description = "Updates the status of a Merchant User (e.g., ACTIVE, INACTIVE, BLOCKED, EXPIRED). Only Admins or Super Admins can perform this action.")
    //@PreAuthorize("hasAnyRole('ADMIN','SUPER_ADMIN')")
    public MerchantResponse<MerchantUserResponse> updateUserStatus(@PathVariable String userName, @PathVariable UserStatus userStatus, @RequestBody MerchantUserUpdateRequest merchantUserUpdateRequest) {
        log.info("received request for Updating user status. userName: {}, status: {}", userName, userStatus);
        return merchantUserService.updateUserStatus(userName, userStatus, merchantUserUpdateRequest);
    }

package com.epay.merchant.model.request;

import com.epay.merchant.util.enums.UserStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import lombok.Builder;
import lombok.Data;

@Builder
@Data
@JsonInclude(JsonInclude.Include.NON_NULL)
public class MerchantUserUpdateRequest {

    private String remark;

}
