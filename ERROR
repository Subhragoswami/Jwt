package com.epay.merchant.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import lombok.*;

/**
 * Class Name: ErrorDto
 * *
 * Description:
 * *
 * Author: V1017903(bhushan wadekar)
 * <p>
 * Copyright (c) 2024 [State Bank of India]
 * All rights reserved
 * *
 * Version:1.0
 */

@Getter
@Setter
@Builder
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ErrorDto {
    private String errorCode;
    private String errorMessage;

}


if (StringUtils.isNotEmpty(merchantLoginRequest.getUserName())) {
                List<ErrorDto> errorMessages = (e instanceof ValidationException)
                        ? ((ValidationException) e).getErrorMessages()
                        : ((MerchantException) e).getErrorMessages();
                tokenService.updateMerchantUserForLogin(merchantLoginRequest.getUserName(), false, errorMessages.toString(), RequestType.LOGIN.getName());
            }
            log.error("Login Validation Failed for userName {} ", merchantLoginRequest.getUserName());
            throw e;

package com.epay.merchant.entity;

import jakarta.persistence.*;
import lombok.*;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.util.UUID;

@Entity
@Getter
@Setter
@Builder
@Table(name = "login_audit")
@AllArgsConstructor
@NoArgsConstructor
@EntityListeners(AuditingEntityListener.class)
public class LoginAudit {
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;
    private UUID userId;
    private String requestType;
    private boolean status;
    private String reason;
    @CreatedDate
    private Long createdAt;
}

[com.epay.merchant.dto.ErrorDto@6259ca97]



