 private Page<AlertManagementResponse> getLatestAlertDescription(String mId, boolean getAll, Pageable pageable) {
        // Fetch alerts based on MID with pagination
        Page<AlertManagement> alertManagementList = getAll ? alertManagementRepository.findByMId(mId, pageable) :
                alertManagementRepository.findUnreadAlertsByMId(mId, pageable);
        // Get user roles
        //List<String> userRoles = EPayIdentityUtil.getUserPrincipal().getUserRole();
        List<String> userRoles = List.of("USER");
        // If user role is "USER", filter alerts accordingly
        List<AlertManagement> filteredAlerts = alertManagementList.toList();
        if (checkIsUserRole(userRoles)) {
            List<AlertMasterDto> accountExpiryAlerts = findAllAlertByName(ACCOUNT_EXPIRY);
            filteredAlerts = filterAlertsForUserRole(filteredAlerts, collectAlertMasterId(accountExpiryAlerts));
        }

        List<AlertManagementResponse> responses = alertMapper.alertManagementEntityToResponse(filteredAlerts);
        return new PageImpl<>(responses, pageable, alertManagementList.getTotalElements());
    }

 private boolean checkIsUserRole(List<String> userRoles) {
        return userRoles.stream().anyMatch(MerchantUserRoles.USER.name()::equals);
    }

 public List<AlertMasterDto> findAllAlertByName(String name) {
        List<AlertMaster> alertMasterList = alertMasterRepository.findAllByName(name);
        return alertMapper.mapAlertMasterEntityListToDtoList(alertMasterList);
    }

protected List<AlertManagement> filterAlertsForUserRole(List<AlertManagement> alertManagements, List<UUID> excludeAlertIds) {
        return alertManagements.stream()
                .filter(alert -> !excludeAlertIds.contains(alert.getAlertId())).toList();
    }

here I'me facing one issue like if userRole is ADMIN then pagination is working but whrn it's USER page=1&size=5 if I send like this it's not working properly because we're fetching first by using query			
