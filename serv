 @Test
    void testReturnAlertsByMId() {
        // Arrange
        String mId = "MID123";
        AlertManagementResponse alert = new AlertManagementResponse();
        PageRequest pageRequest = PageRequest.of(DEFAULT_PAGE_NUMBER, DEFAULT_ALERT_PAGE_SIZE, Sort.by(Sort.Direction.DESC, "createdAt"));

        when(alertDao.getUnreadAlerts(eq(mId)))
                .thenReturn((Page<AlertManagementResponse>) alert);

        // Act
        MerchantResponse<AlertManagementResponse> response = alertService.getUnreadAlertsByMId(mId);

        // Assert
        assertEquals(RESPONSE_SUCCESS, response.getStatus());
        assertEquals(1, response.getTotal());
        verify(alertDao, times(1)).getUnreadAlerts(eq(mId));
    }

class com.epay.merchant.model.response.AlertManagementResponse cannot be cast to class org.springframework.data.domain.Page (com.epay.merchant.model.response.AlertManagementResponse and org.springframework.data.domain.Page are in unnamed module of loader 'app')
java.lang.ClassCastException: class com.epay.merchant.model.response.AlertManagementResponse cannot be cast to class org.springframework.data.domain.Page (com.epay.merchant.model.response.AlertManagementResponse and org.springframework.data.domain.Page are in unnamed module of loader 'app')
	at com.epay.merchant.service.AlertServiceTest.testReturnAlertsByMId(AlertServiceTest.java:60)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended

    @Test
    void testReturnAlertsByMId() {
        // Arrange
        String mId = "MID123";
        AlertManagementResponse alert = new AlertManagementResponse();
        PageRequest pageRequest = PageRequest.of(DEFAULT_PAGE_NUMBER, DEFAULT_ALERT_PAGE_SIZE, Sort.by(Sort.Direction.DESC, "createdAt"));

        when(alertDao.getUnreadAlerts(eq(mId)))
                .thenReturn((Page<AlertManagementResponse>) alert);

        // Act
        MerchantResponse<AlertManagementResponse> response = alertService.getUnreadAlertsByMId(mId);

        // Assert
        assertEquals(RESPONSE_SUCCESS, response.getStatus());
        assertEquals(1, response.getTotal());
        verify(alertDao, times(1)).getUnreadAlerts(eq(mId));
    }
