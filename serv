public void executeReportBySchedule() {
    log.info("Executing reports by schedule.");

    Long scheduleEndTime = DateTimeUtils.addMinutes(reportingConfig.getReportScheduleExecutionWindow());

    // Fetch schedules ready to be executed
    List<ReportScheduleManagement> schedules = findByStatusAndNextScheduleExecutionTime(scheduleEndTime);

    List<ReportManagement> reportManagementList = schedules.stream().map(schedule -> {
        // Update last execution time
        schedule.setLastScheduleExecutionTime(DateTimeUtils.getCurrentTimeInMills());

        // Calculate and update next execution time (supports daily/monthly with generationDate)
        schedule.setNextScheduleExecutionTime(
            ReportScheduleTimeUtils.calculateNextExecutionTime(
                schedule.getFrequency(),
                schedule.getScheduleExecutionTime(),
                schedule.getGenerationDate() // <-- new input
            )
        );

        // Execution Date: T-1 of the actual next execution time
        LocalDate executionDate = new DateTime(schedule.getNextScheduleExecutionTime()).toLocalDate().minusDays(1);

        // Calculate duration range from schedule's reportDuration and execution date
        Pair<LocalDate, LocalDate> dateRange = ReportScheduleTimeUtils.calculateReportDateRange(
            schedule.getReportDuration(), // <-- new field
            executionDate
        );

        // Convert to millis (start of fromDate to end of toDate)
        Long durationFromDate = dateRange.getLeft().atStartOfDay().toDateTime().getMillis();
        Long durationToDate = dateRange.getRight().plusDays(1).atStartOfDay().toDateTime().minusMillis(1).getMillis();

        // Prepare ReportManagement object
        return ReportManagement.builder()
            .reportId(schedule.getReportId())
            .mId(schedule.getMId())
            .format(schedule.getFormat())
            .scheduledId(schedule.getId())
            .durationFromDate(durationFromDate)
            .durationToDate(durationToDate)
            .status(ReportStatus.TO_BE_GENERATE)
            .build();
    }).toList();

    // Persist updated schedules
    reportScheduleManagementRepository.saveAll(schedules);

    // Save all report executions
    reportManagementDao.saveAll(reportManagementList);

    log.info("Reports executed and saved successfully.");
}
