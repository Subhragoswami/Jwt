    protected List<Object> convertToListOfObject(MerchantPayout merchantPayout) {
        return List.of(
                ObjectUtils.isEmpty(merchantPayout.getMerchantId()) ? "" : merchantPayout.getMerchantId(),
                ObjectUtils.isEmpty(merchantPayout.getMerchantName()) ? "" : merchantPayout.getMerchantName(),
                ObjectUtils.isEmpty(merchantPayout.getOrderAmount()) ? BigDecimal.ZERO : merchantPayout.getOrderAmount(),
                ObjectUtils.isEmpty(merchantPayout.getCurrencyCode()) ? "" : merchantPayout.getCurrencyCode(),
                ObjectUtils.isEmpty(merchantPayout.getSettlementAmount()) ? BigDecimal.ZERO : merchantPayout.getSettlementAmount(),
                ObjectUtils.isEmpty(merchantPayout.getSettlementCurrency()) ? "" : merchantPayout.getSettlementCurrency(),
                ObjectUtils.isEmpty(merchantPayout.getCommissionPayable()) ? BigDecimal.ZERO : merchantPayout.getCommissionPayable(),
                ObjectUtils.isEmpty(merchantPayout.getMerchantGstBearableAbs()) ? BigDecimal.ZERO : merchantPayout.getMerchantGstBearableAbs(),
                ObjectUtils.isEmpty(merchantPayout.getPayoutAmount()) ? BigDecimal.ZERO : merchantPayout.getPayoutAmount(),
                ObjectUtils.isEmpty(merchantPayout.getRefundAdjusted()) ? BigDecimal.ZERO : merchantPayout.getRefundAdjusted(),
                ObjectUtils.isEmpty(merchantPayout.getTdrOnRefundAmount()) ? BigDecimal.ZERO : merchantPayout.getTdrOnRefundAmount(),
                ObjectUtils.isEmpty(merchantPayout.getGstOnRefundAmount()) ? BigDecimal.ZERO : merchantPayout.getGstOnRefundAmount(),
                ObjectUtils.isEmpty(merchantPayout.getNetRefundAmount()) ? BigDecimal.ZERO : merchantPayout.getNetRefundAmount(),
                ObjectUtils.isEmpty(merchantPayout.getNetPayoutAmount()) ? BigDecimal.ZERO : merchantPayout.getNetPayoutAmount(),
                ObjectUtils.isEmpty(merchantPayout.getPayoutDate()) ? "" : merchantPayout.getPayoutDate(),
                ObjectUtils.isEmpty(merchantPayout.getTransactionCount()) ? BigDecimal.ZERO : merchantPayout.getTransactionCount(),
                ObjectUtils.isEmpty(merchantPayout.getChargebackAdjusted()) ? BigDecimal.ZERO : merchantPayout.getChargebackAdjusted()
        );

like this create for this one also

public class TransactionRefund {

    private String settlementFileNumber;
    private String settlementTime;
    private String merchantId;
    private String merchantName;
    private String orderRefNumber;
    private String atrnNum;
    private String createdDate;
    private String currencyCode;
    private BigDecimal orderAmount;
    private String refundCurrency;
    private BigDecimal settlementAmount;
    private Integer commissionPayable;
    private BigDecimal merchantGstBearableAbs;
    private Integer netRefundAmount;
    private String channelBank;
    private String gatewayTraceNumber;
    private String payMode;
    private String refundType;
    private String refundBookingDate;
    private String arrnNum;

}
