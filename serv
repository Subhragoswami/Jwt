public MerchantResponse<CaptchaResponse> generateCaptcha(CaptchaRequest captchaRequest) {
        logger.info("generate captcha for RequestId: {}", captchaRequest.getRequestId());
        //Step 1 : Validate Captcha Request
        captchaValidator.requestValidator(captchaRequest);
        RequestType requestType = RequestType.getRequestType(captchaRequest.getRequestType());
        //Step 2 : Generate Captcha Text
        String captchaText = captchaProducer.createText();
        //Step 3 : Generate Captcha Image and convert into Base 64
        String base64Image = generateCaptchaImage(captchaText);
        //Step 3 : Save the Captcha into DB
        CaptchaDto captchaDto = captchaDao.save(captchaText, captchaRequest.getRequestId(), requestType);
        //Step 4 : Build the Merchant Response
        logger.info("generate captcha completed for RequestId: {}", captchaRequest.getRequestId());
        return MerchantResponse.<CaptchaResponse>builder().data(List.of(captchaMapper.mapCaptchaDtoToCaptchaResponse(captchaDto))).status(RESPONSE_SUCCESS).build();
    }

 CaptchaResponse mapCaptchaDtoToCaptchaResponse(CaptchaDto captchaDto);

@Data
public class CaptchaDto {

    private UUID requestId;
    @JsonIgnore
    private int version;
    private String captchaImage;
    private Long expiryTime;
    private RequestType requestType;
    @Transient
    private String captchaText;
}

@AllArgsConstructor
@Getter
@Setter
@Builder
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
public class CaptchaResponse {

    private UUID requestId;
    private String captchaImage;
    private Long expiryTime;
    private String requestType;

}

here I  need to set captchaImage as base64Image in response 
in this method captchaMapper.mapCaptchaDtoToCaptchaResponse(captchaDto)
