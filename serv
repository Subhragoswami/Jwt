 public List<AdminDowntimePayModeInfo> getDowntimeAPIs() {
        URI uri = URI.create(getBaseUrl() + DOWNTIME_API_ENDPOINT);
        return getWebClient().post().uri(uri).retrieve().onStatus(httpStatusCode -> httpStatusCode.is4xxClientError() || httpStatusCode.is5xxServerError(), clientResponse -> Mono.error(new MerchantException(ErrorConstants.INVALID_ERROR_CODE, ErrorConstants.INVALID_ERROR_CODE))).bodyToMono(new ParameterizedTypeReference<MerchantResponse<AdminDowntimePayModeInfo>>() {
        }).map(MerchantResponse::getData).block();
    }

 private Set<String> getMerchantDowntimeAPIs() {
        URI uri = URI.create(getBaseUrl() + DOWNTIME_API_ENDPOINT);
        List<HashMap<String, String>> block = getWebClient().post().uri(uri).retrieve().onStatus(httpStatusCode -> httpStatusCode.is4xxClientError() || httpStatusCode.is5xxServerError(), clientResponse -> Mono.error(new MerchantException(ErrorConstants.INVALID_ERROR_CODE, ErrorConstants.INVALID_ERROR_CODE))).bodyToMono(new ParameterizedTypeReference<MerchantResponse<HashMap<String, String>>>() {
        }).map(MerchantResponse::getData).block();

        if (CollectionUtils.isNotEmpty(block)) {
            return block.stream().filter(map -> map.containsKey("gatewayId")).map(map -> map.get("gatewayId")).collect(Collectors.toSet());
        }
        return new HashSet<>();
    }
