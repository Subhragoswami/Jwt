package com.epay.merchant.service;
import com.epay.merchant.dao.CaptchaDao;
import com.epay.merchant.entity.Captcha;
import com.epay.merchant.model.request.CaptchaRequest;
import com.epay.merchant.model.response.CaptchaResponse;
import com.epay.merchant.model.response.ResponseDto;
import com.epay.merchant.util.enums.RequestType;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.code.kaptcha.impl.DefaultKaptcha;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.Base64;
import java.util.List;
import java.util.UUID;

import static com.epay.merchant.util.AppConstants.RESPONSE_SUCCESS;

@Service
@RequiredArgsConstructor
public class CaptchaService {

    private final CaptchaDao captchaDao;

    @Autowired
    private DefaultKaptcha defaultKaptcha;

    private final ObjectMapper mapper;

    private final DefaultKaptcha captchaProducer;

    public ResponseDto<CaptchaResponse> createCaptcha(CaptchaRequest captchaRequest) throws IOException {
        String captchaText = captchaProducer.createText();
        BufferedImage image = captchaProducer.createImage(captchaText);

        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        ImageIO.write(image, "jpg", outputStream);
        String base64Image = Base64.getEncoder().encodeToString(outputStream.toByteArray());
        Captcha captcha = buildCaptcha(base64Image, captchaRequest.getRequestId(), captchaRequest.getRequestType());

        captcha = captchaDao.save(captcha);
        CaptchaResponse captchaResponse = mapper.convertValue(captcha, CaptchaResponse.class);
        return ResponseDto.<CaptchaResponse>builder()
                .data(List.of(captchaResponse))
                .status(RESPONSE_SUCCESS)
                .build();
    }

    private Captcha buildCaptcha(String captchaText, UUID requestId, RequestType requestType){
        Captcha captcha = new Captcha();
        captcha.setCaptchaText(captchaText);
        captcha.setRequestId(requestId);
        captcha.setRequestType(requestType);
        captcha.setExpiryTime(LocalDateTime.now().plusMinutes(5));
        return captcha;
    }


}
