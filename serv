    @Test
    void testValidateMerchantAccountApprovalRequest() {

        List<MerchantInfoDto> merchantInfoForMerchantUser = List.of(new MerchantInfoDto("mid123", "aregtaerta", "ACTIVE", 4), new MerchantInfoDto("mid123", "aregtaerta", "ACTIVE", 4));
        SecurityContextHolder.getContext().setAuthentication(mock(Authentication.class));
        when(SecurityContextHolder.getContext().getAuthentication().getPrincipal()).thenReturn(mockPrincipal);
        when(merchantInfoDao.getAllAccessMerchantInfoForMerchantUser("userName")).thenReturn(merchantInfoForMerchantUser);
        try (MockedStatic<EPayIdentityUtil> mocked = Mockito.mockStatic(EPayIdentityUtil.class, Mockito.CALLS_REAL_METHODS)) {
            mocked.when(() -> EPayIdentityUtil.getUserPrincipal().getUsername()).thenReturn("userName");
        }

        when(merchantBankDao.isExistByAccountUniqueIdentifier("asddadadsa454")).thenReturn(true);
        merchantBankAccountApprovalRequest = MerchantBankAccountApprovalRequest.builder().mId("mid123").accountName("Merchant").isApproved(true).remarks("done").accountUniqueIdentifier("asddadadsa454").build();
        merchantBankAccountValidator.validateMerchantAccountApprovalRequest(merchantBankAccountApprovalRequest);
    }

   public void validateMerchantAccountApprovalRequest(MerchantBankAccountApprovalRequest merchantBankAccountApprovalRequest) {
        logger.debug("Merchant bank account approval validation start for {}", merchantBankAccountApprovalRequest);
        errorDtoList = new ArrayList<>();
        validateMandatoryFields(merchantBankAccountApprovalRequest);
        validateMId(merchantBankAccountApprovalRequest.getMId());
        validateAccountUniqueIdentifier(merchantBankAccountApprovalRequest.getAccountUniqueIdentifier());
        validateFieldValue(merchantBankAccountApprovalRequest.getOperationType(), Arrays.stream(OperationType.values()).map(Enum::name).toList(), OPERATION_TYPE);
        throwIfErrors();
    }

com.epay.merchant.exception.ValidationException
	at com.epay.merchant.validator.BaseValidator.throwIfErrors(BaseValidator.java:150)
	at com.epay.merchant.validator.MerchantBankAccountValidator.validateMerchantAccountApprovalRequest(MerchantBankAccountValidator.java:84)
	at com.epay.merchant.validator.MerchantBankAccountValidatorTest.testValidateMerchantAccountApprovalRequest(MerchantBankAccountValidatorTest.java:137)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
