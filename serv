    public void validatedMerchantUser(String userName, String requestType) {
        logger.info("Validating merchant user with userName: {}", userName);
        MerchantUserDto merchantUser = merchantUserDao.getByUserNameOrEmailOrMobilePhoneAndStatus(userName, userName, userName, List.of(UserStatus.values()));
        if (requestType.equals(RESET_PASSWORD.name) && !UserStatus.ACTIVE.equals(merchantUser.getStatus()) || !UserStatus.EXPIRED.equals(merchantUser.getStatus())) {
            logger.info("Merchant user fetched with status: {}", merchantUser.getStatus());
            throw new MerchantException(ErrorConstants.INVALID_ERROR_CODE, MessageFormat.format(ErrorConstants.INVALID_ERROR_MESSAGE, "Merchant user status", "User is " + merchantUser.getStatus()));
        }else if(!UserStatus.ACTIVE.equals(merchantUser.getStatus())) {
            logger.info("Merchant user fetched with status: {}", merchantUser.getStatus());
            throw new MerchantException(ErrorConstants.INVALID_ERROR_CODE, MessageFormat.format(ErrorConstants.INVALID_ERROR_MESSAGE, "Merchant user status", "User is " + merchantUser.getStatus()));
        }
        if(merchantUser.isFirstLogin()) {
            logger.info("Merchant user fetched with firstLogin flag, id: {}", merchantUser.getId());
            throw new MerchantException(ErrorConstants.FIRST_LOGIN_ERROR_CODE, ErrorConstants.FIRST_LOGIN_ERROR_MESSAGE);
        }
        logger.info("Merchant user validated successfully for userName: {}", userName);
    }
