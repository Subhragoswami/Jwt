package com.epay.reporting;

import com.epay.reporting.util.enums.Frequency;

import java.time.Instant;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;

import static com.epay.reporting.util.enums.Frequency.MONTHLY;

public class Test {
    public static void main(String[] args){
        calculateBackDateByFrequency(Frequency.YEARLY , System.currentTimeMillis());
    }
    public static Long calculateBackDateByFrequency(Frequency frequency, Long timeInMillis) {
        LocalDateTime inputDateTime = Instant.ofEpochMilli(timeInMillis).atZone(ZoneId.systemDefault()).toLocalDateTime();
        LocalTime reqTime = inputDateTime.toLocalTime();

        LocalDateTime now = LocalDateTime.now();
        LocalDateTime nextDateTime;

        switch (frequency) {
            case DAILY ->
                    nextDateTime = now.toLocalTime().isBefore(reqTime) ? LocalDateTime.of(now.toLocalDate().minusDays(1), reqTime) : LocalDateTime.of(now.toLocalDate(), reqTime);
            case MONTHLY ->
                   nextDateTime = LocalDateTime.of(now.toLocalDate().minusMonths(1), reqTime);
                    //nextDateTime = now.toLocalTime().isBefore(reqTime) ? LocalDateTime.of(now.toLocalDate().minusMonths(1).withDayOfMonth(Math.min(now.toLocalDate().lengthOfMonth(), 30)), reqTime) : LocalDateTime.of(now.toLocalDate().withDayOfMonth(Math.min(now.toLocalDate().lengthOfMonth(), 30)), reqTime);
            case YEARLY ->
                    nextDateTime = now.toLocalTime().isBefore(reqTime) ? LocalDateTime.of(now.toLocalDate().minusYears(1), reqTime) : LocalDateTime.of(now.toLocalDate().withDayOfYear(1), reqTime);
            default -> throw new IllegalArgumentException("Invalid Frequency: " + frequency);
        }

        System.out.println(nextDateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli());
        return nextDateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();
    }
}

here for year it's giving 1735740899239 means  Wed Jan 01 2025 19:44:59.239 but it should give 2024
