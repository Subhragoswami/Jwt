 public MerchantResponse<MerchantBankAccountDetailsResponse> getBankAccountDetails(String mId, Pageable pageable){
        List<MerchantBankAccountDetailsResponse> merchantBankAccountDetailsResponseList = merchantBankAccountCreationDao.getBankDetailsByMid(mId, pageable);
        return MerchantResponse.<MerchantBankAccountDetailsResponse>builder().data(merchantBankAccountDetailsResponseList).status(RESPONSE_SUCCESS).count(merchantBankAccountDetailsResponseList.stream().count()).build();
    }

 @GetMapping("/{mId}")
    @Operation(summary = "", description = "")
    @PreAuthorize("hasAnyRole('ADMIN','SUPER_ADMIN')")
    public MerchantResponse<MerchantBankAccountDetailsResponse> getBankAccountDetails(@PathVariable String mId, @PageableDefault Pageable pageable){
        return merchantBankAccountCreationService.getBankAccountDetails(mId, pageable);
    }
