@Component
@RequiredArgsConstructor
public class MerchantOrderHybridFeeDao {

    private final LoggerUtility logger = LoggerFactoryUtility.getLogger(this.getClass());

    private final MerchantOrderHybridFeeRepository merchantOrderHybridFeeRepository;

    public void savePricingInfo(MerchantPricingRequestDto merchantPricingRequestDto, MerchantPricingInfo merchantPricingInfo, MerchantPricingResponseDto pricingStructure) {

        logger.info("Saving Merchant Order Hybrid Fee.");
        merchantOrderHybridFeeRepository.save(MerchantOrderHybridFee.builder()
                .atrn(merchantPricingRequestDto.getAtrn())
                .mId(merchantPricingRequestDto.getMId())
                .bearableEntity(pricingStructure.getBearableEntity())
                .bearableComponent(pricingStructure.getBearableComponent())
                .bearableAmountCutoff(merchantPricingInfo.getBearableCutOffAmt())
                .bearableRateType(pricingStructure.getBearableType())
                .bearablePercentageRate(pricingStructure.getBearablePercentageRate())
                .bearableFlatRate(pricingStructure.getBearableFlatRate())
                .merchantFeeBearableAbs(merchantPricingInfo.getMerchantBearableAmt())
                .customerFeeBearableAbs(merchantPricingInfo.getCustomerBearableAmt())
                .merchantStBearableAbs(merchantPricingInfo.getMerchantBearableServiceTax())
                .customerStBearableAbs(merchantPricingInfo.getCustomerBearableServiceTax())
                .bearableLimit(pricingStructure.getBearableLimit())
                .createDate(new Date())
                .createdBy("1")
                .createdBySessionId("1")
                .processFlag(pricingStructure.getProcessFlag())
                .build());
    }
}
